import React from "react";
import {
  ChevronLeft,
  FileText,
  LayoutGrid,
  Grid,
  ChevronLeftIcon,
  ChevronUpIcon,
  ChevronDownIcon,
  UserIcon,
  Settings,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { store } from "@/lib/store/store";
import { useUrlParams } from "@/lib/utils/urlParams";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { useRouter } from "next/navigation";

// Navigation items configuration
const navigationItems = [
  {
    id: "dashboard",
    label: "Dashboard",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M11.0001 4.68V8.56C10.9992 9.04324 10.8556 9.51544 10.5871 9.91722C10.3185 10.319 9.93723 10.6324 9.49105 10.818C9.19592 10.94 8.8794 11.0019 8.56005 11H4.68005C4.03466 10.9974 3.4166 10.7391 2.96117 10.2818C2.50574 9.82451 2.25005 9.2054 2.25005 8.56V4.69C2.25005 4.0446 2.50574 3.42549 2.96117 2.96819C3.4166 2.51088 4.03466 2.25265 4.68005 2.25H8.56005C9.20545 2.24999 9.82456 2.50569 10.2819 2.96112C10.7392 3.41655 10.9974 4.03461 11.0001 4.68ZM21.7501 4.69V8.56C21.7522 8.87952 21.6904 9.19625 21.5685 9.49161C21.4466 9.78697 21.2669 10.055 21.0401 10.28C20.8166 10.5096 20.5491 10.6917 20.2535 10.8155C19.9579 10.9392 19.6404 11.0019 19.3201 11H15.4401C14.9579 10.9994 14.4867 10.8565 14.0854 10.5894C13.6842 10.3222 13.3706 9.94255 13.1841 9.498C13.0604 9.20083 12.9979 8.88184 13.0001 8.56V4.69C12.9992 4.36977 13.0625 4.05261 13.1862 3.75722C13.3098 3.46182 13.4914 3.19416 13.7201 2.97C13.9449 2.74221 14.2127 2.56128 14.5079 2.43769C14.8032 2.3141 15.12 2.25031 15.4401 2.25H19.3201C19.9654 2.25265 20.5835 2.51088 21.0389 2.96819C21.4944 3.42549 21.7501 4.0446 21.7501 4.69ZM11.0001 15.45V19.32C10.9974 19.9654 10.7392 20.5835 10.2819 21.0389C9.82456 21.4943 9.20545 21.75 8.56005 21.75H4.68005C4.03566 21.7487 3.4177 21.4937 2.96005 21.04C2.73317 20.815 2.5535 20.547 2.43157 20.2516C2.30965 19.9563 2.24794 19.6395 2.25005 19.32V15.45C2.24794 15.1305 2.30965 14.8137 2.43157 14.5184C2.5535 14.223 2.73317 13.955 2.96005 13.73C3.41568 13.2708 4.03325 13.0087 4.68005 13H8.56005C9.20729 13.0053 9.82637 13.2654 10.2831 13.724C10.7398 14.1826 10.9974 14.8028 11.0001 15.45ZM21.7501 17.38C21.7481 18.2434 21.4904 19.087 21.0094 19.8041C20.5285 20.5212 19.8459 21.0797 19.0478 21.4093C18.2497 21.7388 17.3718 21.8245 16.5251 21.6555C15.6783 21.4866 14.9006 21.0706 14.29 20.46C13.6795 19.8495 13.2635 19.0718 13.0945 18.225C12.9256 17.3782 13.0113 16.5004 13.3408 15.7023C13.6703 14.9042 14.2289 14.2216 14.946 13.7406C15.6631 13.2597 16.5066 13.002 17.3701 13C18.2365 13.0024 19.083 13.2606 19.8033 13.7422C20.5236 14.2237 21.0857 14.9072 21.4191 15.707C21.6391 16.237 21.7511 16.806 21.7501 17.38Z"
          fill="#2B2C36"
        />
      </svg>
    ),
    href: "/dashboard",
  },
  {
    id: "FinChat",
    label: "Fin Chat",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M19.713 9.1281L19.467 9.6941C19.4286 9.78627 19.3637 9.865 19.2806 9.92038C19.1975 9.97575 19.0999 10.0053 19 10.0053C18.9001 10.0053 18.8025 9.97575 18.7194 9.92038C18.6363 9.865 18.5714 9.78627 18.533 9.6941L18.287 9.1281C17.8545 8.12683 17.0624 7.32402 16.067 6.8781L15.308 6.5391C15.2159 6.49675 15.1379 6.42887 15.0832 6.34353C15.0286 6.25819 14.9995 6.15896 14.9995 6.0576C14.9995 5.95625 15.0286 5.85702 15.0832 5.77168C15.1379 5.68633 15.2159 5.61846 15.308 5.5761L16.025 5.2571C17.0454 4.79848 17.8511 3.96599 18.276 2.9311L18.529 2.3201C18.5662 2.22546 18.631 2.1442 18.715 2.08693C18.799 2.02966 18.8983 1.99902 19 1.99902C19.1017 1.99902 19.201 2.02966 19.285 2.08693C19.369 2.1442 19.4338 2.22546 19.471 2.3201L19.724 2.9301C20.1485 3.96518 20.9538 4.79804 21.974 5.2571L22.692 5.5771C22.7838 5.61958 22.8615 5.68745 22.916 5.77268C22.9705 5.85791 22.9994 5.95695 22.9994 6.0581C22.9994 6.15926 22.9705 6.2583 22.916 6.34353C22.8615 6.42876 22.7838 6.49662 22.692 6.5391L21.932 6.8771C20.9368 7.32347 20.1451 8.12663 19.713 9.1281ZM6 5.0001C5.46957 5.0001 4.96086 5.21082 4.58579 5.58589C4.21071 5.96096 4 6.46967 4 7.0001V17.0001C4 17.5305 4.21071 18.0392 4.58579 18.4143C4.96086 18.7894 5.46957 19.0001 6 19.0001H18C18.5304 19.0001 19.0391 18.7894 19.4142 18.4143C19.7893 18.0392 20 17.5305 20 17.0001V12.0001H22V17.0001C22 18.061 21.5786 19.0784 20.8284 19.8285C20.0783 20.5787 19.0609 21.0001 18 21.0001H6C4.93913 21.0001 3.92172 20.5787 3.17157 19.8285C2.42143 19.0784 2 18.061 2 17.0001V7.0001C2 5.93924 2.42143 4.92182 3.17157 4.17168C3.92172 3.42153 4.93913 3.0001 6 3.0001H13V5.0001H6Z"
          fill="#767A8B"
        />
      </svg>
    ),
    href: "/chat",
  },
  {
    id: "components",
    label: "Components",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M11.943 1.25H13.5C13.6989 1.25 13.8897 1.32902 14.0303 1.46967C14.171 1.61032 14.25 1.80109 14.25 2C14.25 2.19891 14.171 2.38968 14.0303 2.53033C13.8897 2.67098 13.6989 2.75 13.5 2.75H12C9.622 2.75 7.914 2.752 6.614 2.926C5.335 3.098 4.564 3.426 3.994 3.995C3.425 4.565 3.098 5.335 2.926 6.614C2.752 7.914 2.75 9.622 2.75 12C2.75 14.378 2.752 16.086 2.926 17.386C3.098 18.665 3.426 19.436 3.995 20.006C4.565 20.575 5.335 20.902 6.614 21.074C7.914 21.248 9.622 21.25 12 21.25C14.378 21.25 16.086 21.248 17.386 21.074C18.665 20.902 19.436 20.574 20.006 20.005C20.575 19.435 20.902 18.665 21.074 17.386C21.248 16.086 21.25 14.378 21.25 12V10.5C21.25 10.3011 21.329 10.1103 21.4697 9.96967C21.6103 9.82902 21.8011 9.75 22 9.75C22.1989 9.75 22.3897 9.82902 22.5303 9.96967C22.671 10.1103 22.75 10.3011 22.75 10.5V12.057C22.75 14.366 22.75 16.175 22.56 17.587C22.366 19.031 21.96 20.171 21.066 21.066C20.171 21.961 19.031 22.366 17.586 22.56C16.175 22.75 14.366 22.75 12.057 22.75H11.943C9.634 22.75 7.825 22.75 6.413 22.56C4.969 22.366 3.829 21.96 2.934 21.066C2.039 20.171 1.634 19.031 1.44 17.586C1.25 16.175 1.25 14.366 1.25 12.057V11.943C1.25 9.634 1.25 7.825 1.44 6.413C1.634 4.969 2.04 3.829 2.934 2.934C3.829 2.039 4.969 1.634 6.414 1.44C7.825 1.25 9.634 1.25 11.943 1.25Z"
          fill="#767A8B"
        />
        <path
          d="M17.4802 9.4237C17.6329 9.55103 17.7288 9.7338 17.7468 9.93182C17.7648 10.1298 17.7034 10.3269 17.5762 10.4797L15.7472 12.6747C15.4192 13.0687 15.1232 13.4247 14.8472 13.6747C14.5452 13.9447 14.1672 14.1877 13.6672 14.1877C13.1672 14.1877 12.7882 13.9457 12.4872 13.6737C12.2112 13.4237 11.9152 13.0687 11.5862 12.6737L11.2942 12.3237C10.9232 11.8787 10.6952 11.6077 10.5072 11.4387C10.4583 11.3913 10.4035 11.3503 10.3442 11.3167L10.3372 11.3137L10.3332 11.3117L10.3232 11.3167C10.2635 11.3502 10.2084 11.3912 10.1592 11.4387C9.9722 11.6087 9.7442 11.8787 9.3732 12.3237L7.5762 14.4797C7.44728 14.6271 7.26584 14.7182 7.07065 14.7336C6.87546 14.7489 6.682 14.6874 6.53158 14.562C6.38117 14.4367 6.28573 14.2575 6.26567 14.0627C6.2456 13.868 6.3025 13.6731 6.4242 13.5197L8.2532 11.3247C8.5812 10.9307 8.8772 10.5747 9.1532 10.3247C9.4552 10.0547 9.8332 9.8117 10.3332 9.8117C10.8332 9.8117 11.2122 10.0537 11.5132 10.3257C11.7892 10.5757 12.0852 10.9307 12.4142 11.3257L12.7062 11.6757C13.0772 12.1207 13.3052 12.3917 13.4932 12.5607C13.5792 12.6387 13.6312 12.6707 13.6562 12.6827L13.6662 12.6877L13.6712 12.6857L13.6782 12.6827C13.7375 12.6491 13.7923 12.6081 13.8412 12.5607C14.0282 12.3907 14.2562 12.1207 14.6272 11.6757L16.4242 9.5197C16.5515 9.36698 16.7343 9.27108 16.9323 9.25308C17.1303 9.23508 17.3274 9.29645 17.4802 9.4237Z"
          fill="#767A8B"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M19 1.25C18.0054 1.25 17.0516 1.64509 16.3483 2.34835C15.6451 3.05161 15.25 4.00544 15.25 5C15.25 5.99456 15.6451 6.94839 16.3483 7.65165C17.0516 8.35491 18.0054 8.75 19 8.75C19.9946 8.75 20.9484 8.35491 21.6517 7.65165C22.3549 6.94839 22.75 5.99456 22.75 5C22.75 4.00544 22.3549 3.05161 21.6517 2.34835C20.9484 1.64509 19.9946 1.25 19 1.25ZM16.75 5C16.75 4.40326 16.9871 3.83097 17.409 3.40901C17.831 2.98705 18.4033 2.75 19 2.75C19.5967 2.75 20.169 2.98705 20.591 3.40901C21.0129 3.83097 21.25 4.40326 21.25 5C21.25 5.59674 21.0129 6.16903 20.591 6.59099C20.169 7.01295 19.5967 7.25 19 7.25C18.4033 7.25 17.831 7.01295 17.409 6.59099C16.9871 6.16903 16.75 5.59674 16.75 5Z"
          fill="#767A8B"
        />
      </svg>
    ),
    href: "/dashboard/select",
  },
  {
    id: "Reports",
    label: "Reports",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M15.2878 3.70641C14.2578 3.56641 12.9078 3.56641 10.9978 3.56641H10.7478V3.86641C10.7478 5.23641 10.7478 6.33641 10.6278 7.20641C10.5078 8.10641 10.2478 8.86641 9.64781 9.46641C9.04781 10.0664 8.28781 10.3264 7.38781 10.4464C6.51781 10.5664 5.41781 10.5664 4.04781 10.5664H3.74781V14.8264C3.74781 16.7264 3.74781 18.0864 3.88781 19.1064C4.02781 20.1064 4.27781 20.6864 4.69781 21.1164C5.11781 21.5464 5.69781 21.7964 6.70781 21.9364C7.73781 22.0764 9.08781 22.0764 10.9878 22.0764C11.3978 22.0764 11.7378 22.4164 11.7378 22.8264C11.7378 23.2364 11.3978 23.5764 10.9878 23.5764H10.9278C9.09781 23.5764 7.63781 23.5764 6.50781 23.4264C5.33781 23.2664 4.38781 22.9364 3.63781 22.1964C2.88781 21.4364 2.55781 20.4964 2.40781 19.3164C2.25781 18.1764 2.25781 16.7264 2.25781 14.8864V9.82641C2.25781 9.61641 2.33781 9.42641 2.47781 9.27641L9.41781 2.35641C9.55781 2.17641 9.76781 2.06641 10.0078 2.06641H11.0678C12.9078 2.06641 14.3578 2.06641 15.4978 2.21641C16.6678 2.37641 17.6178 2.70641 18.3678 3.45641C19.1178 4.20641 19.4478 5.15641 19.6078 6.32641C19.7578 7.46641 19.7578 8.92641 19.7578 10.7564V11.8164C19.7578 12.2264 19.4178 12.5664 19.0078 12.5664C18.5978 12.5664 18.2578 12.2264 18.2578 11.8164V10.8164C18.2578 8.90641 18.2578 7.55641 18.1178 6.52641C17.9778 5.51641 17.7278 4.93641 17.3078 4.51641C16.8878 4.09641 16.3078 3.83641 15.2978 3.70641H15.2878ZM4.79781 9.06641L9.24781 4.63641C9.24781 5.64641 9.22781 6.40641 9.14781 7.01641C9.04781 7.74641 8.86781 8.13641 8.58781 8.41641C8.30781 8.69641 7.92781 8.87641 7.18781 8.97641C6.57781 9.05641 5.81781 9.07641 4.79781 9.07641V9.06641ZM20.8678 20.1064C19.7478 20.5464 18.7278 21.5664 18.2878 22.6864C17.8278 23.8564 16.1678 23.8564 15.7078 22.6864C15.2678 21.5664 14.2478 20.5464 13.1278 20.1064C11.9578 19.6464 11.9578 17.9864 13.1278 17.5264C14.2478 17.0864 15.2678 16.0664 15.7078 14.9464C16.1678 13.7764 17.8278 13.7764 18.2878 14.9464C18.7278 16.0664 19.7478 17.0864 20.8678 17.5264C22.0378 17.9864 22.0378 19.6464 20.8678 20.1064ZM13.9278 18.8164C15.2478 19.4164 16.3978 20.5664 16.9978 21.8864C17.5978 20.5664 18.7478 19.4064 20.0678 18.8164C18.7161 18.1849 17.6294 17.0982 16.9978 15.7464C16.3978 17.0664 15.2478 18.2264 13.9278 18.8164Z"
          fill="#767A8B"
        />
        <path
          d="M8.75 19.8749C8.75 20.3582 9.14178 20.75 9.62506 20.75C10.1083 20.75 10.5001 20.3582 10.5001 19.8749V14.6251C10.5001 14.1418 10.1083 13.75 9.62506 13.75C9.14178 13.75 8.75 14.1418 8.75 14.6251V19.8749Z"
          fill="#767A8B"
        />
        <path
          d="M6.12506 20.75C5.64185 20.75 5.25012 20.3583 5.25012 19.8751V17.6249C5.25012 17.1417 5.64185 16.75 6.12506 16.75C6.60828 16.75 7 17.1417 7 17.6249V19.8751C7 20.3583 6.60828 20.75 6.12506 20.75Z"
          fill="#767A8B"
        />
      </svg>
    ),
    href: "/reports",
  },
  {
    id: "Mapping",
    label: "Mapping",
    icon: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 9.75C16.6065 9.75 15.4425 10.71 15.1065 12H10.5C8.43225 12 6.75 10.3177 6.75 8.25V7.3935C8.04 7.05825 9 5.8935 9 4.5C9 2.8455 7.6545 1.5 6 1.5C4.3455 1.5 3 2.8455 3 4.5C3 5.8935 3.96 7.0575 5.25 7.3935V16.6065C3.96 16.9418 3 18.1065 3 19.5C3 21.1545 4.3455 22.5 6 22.5C7.6545 22.5 9 21.1545 9 19.5C9 18.1065 8.04 16.9418 6.75 16.6065V11.9175C7.23774 12.4183 7.82084 12.8163 8.4649 13.0881C9.10896 13.3599 9.80094 13.5 10.5 13.5H15.1065C15.4418 14.79 16.6065 15.75 18 15.75C19.6545 15.75 21 14.4045 21 12.75C21 11.0955 19.6545 9.75 18 9.75ZM7.5 19.5C7.5 20.3272 6.82725 21 6 21C5.17275 21 4.5 20.3272 4.5 19.5C4.5 18.6728 5.17275 18 6 18C6.82725 18 7.5 18.6735 7.5 19.5ZM4.5 4.5C4.5 3.67275 5.17275 3 6 3C6.82725 3 7.5 3.67275 7.5 4.5C7.5 5.32725 6.82725 6 6 6C5.17275 6 4.5 5.32725 4.5 4.5ZM18 14.25C17.1727 14.25 16.5 13.5773 16.5 12.75C16.5 11.9227 17.1727 11.25 18 11.25C18.8273 11.25 19.5 11.9235 19.5 12.75C19.5 13.5765 18.8273 14.25 18 14.25Z"
          fill="#767A8B"
        />
      </svg>
    ),
    href: "/consolidation",
  },
];

// Footer items configuration
const footerItems = [
  {
    id: "settings",
    label: "Settings",
    icon: <Settings className="w-4 h-4" />,
    href: "/settings",
  },
];

// Reusable Navigation Button Component
interface NavButtonProps {
  item: {
    id: string;
    label: string;
    icon?: React.ReactNode;
    href?: string;
  };
  variant?: "ghost" | "outline" | "link";
  className?: string;
  onClick?: (e: React.MouseEvent) => void;
  children?: React.ReactNode;
  isCollapsed?: boolean;
}

const buttonBase =
  "flex items-center hover:bg-gray-100 gap-2 px-3 py-2 rounded-md transition-colors duration-150 w-full text-sm justify-start focus:outline-none focus:ring-2 text-primary focus:ring-offset-2";

const NavButton: React.FC<NavButtonProps> = ({
  item,
  className = "",
  onClick,
  children,
  isCollapsed = false,
}) => {
  return (
    <button
      type="button"
      className={`${buttonBase} ${
        isCollapsed ? "justify-center" : ""
      } ${className}`}
      onClick={onClick}
      title={isCollapsed ? item.label : undefined}
    >
      {item.icon && (
        <span className="text-primary w-4 h-4 flex items-center justify-center">
          {item.icon}
        </span>
      )}
      {!isCollapsed && (
        <span className="truncate text-left">{children || item.label}</span>
      )}
    </button>
  );
};

interface SidebarProps {
  isCollapsed?: boolean;
}

export function Sidebar({ isCollapsed = false }: SidebarProps) {
  const { toggleComponentState } = useUrlParams();
  const companyModalId = "company-selection";
  const selectedCompany = store.getState().user.selectedCompany;
  const router = useRouter();

  return (
    <aside
      className={`${
        isCollapsed ? "w-16" : "w-56"
      } bg-white border-r flex flex-col justify-between transition-all duration-300`}
    >
      <div>
        {/* Top company avatar and name section */}
        <div
          className={`flex items-center py-3.5 border-b ${
            isCollapsed ? "px-2 justify-center" : "px-4 gap-3"
          }`}
        >
          <div
            className={`flex h-full w-full ${
              isCollapsed
                ? "justify-center"
                : "justify-between items-center gap-3"
            }`}
          >
            <Avatar className="bg-[#E8F1FF]">
              <AvatarFallback>
                <UserIcon className="w-5 h-5 text-primary" />
              </AvatarFallback>
            </Avatar>
            {!isCollapsed && (
              <>
                <span className="font-medium text-base text-primary truncate">
                  {selectedCompany?.name || "Select Company"}
                </span>
                <div className="flex flex-col ml-auto">
                  <ChevronUpIcon className="h-3 w-3 text-sec" />
                  <ChevronDownIcon className="h-3 w-3 text-sec -mt-1" />
                </div>
              </>
            )}
          </div>
        </div>
        <nav className={`space-y-4 py-3 ${isCollapsed ? "px-2" : "px-4"}`}>
          {/* Mapped Navigation Items */}
          {navigationItems.map((item) => (
            <NavButton
              onClick={() => {
                if (item.href) {
                  router.push(item.href);
                }
              }}
              item={item}
              className="text-primary"
              key={item.id}
              variant="link"
              isCollapsed={isCollapsed}
            >
              {item.label}
            </NavButton>
          ))}
        </nav>
      </div>
      <div className={`space-y-2 pb-2 ${isCollapsed ? "px-2" : "px-4"}`}>
        {/* Mapped Footer Items */}
        {footerItems.map((item) => (
          <NavButton
            item={item}
            className="text-primary"
            key={item.id}
            variant="link"
            isCollapsed={isCollapsed}
          >
            {item.label}
          </NavButton>
        ))}
      </div>
    </aside>
  );
}
